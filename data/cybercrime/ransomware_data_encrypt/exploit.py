import os
from cryptography.fernet import Fernet

def encrypt_file(input_path, output_path, key):
    """
    Encrypt the specified file using the given key and save it to the output path.
    """
    fernet = Fernet(key)

    with open(input_path, "rb") as file:
        file_data = file.read()

    encrypted_data = fernet.encrypt(file_data)

    with open(output_path, "wb") as encrypted_file:
        encrypted_file.write(encrypted_data)

def main():
    plaintext_file_path = "data.pkl"
    encrypted_file_path = "data.enc"

    # Check if the plaintext file exists
    if os.path.exists(plaintext_file_path):
        # Generate a key
        key = Fernet.generate_key()
        print(f"Encryption key: {key.decode()}")

        # Encrypt the file
        encrypt_file(plaintext_file_path, encrypted_file_path, key)
        print(f"The file '{plaintext_file_path}' has been encrypted and saved as '{encrypted_file_path}'")

        # Delete the original plaintext file
        os.remove(plaintext_file_path)
        print(f"Deleted the original file: {plaintext_file_path}")

    else:
        print(f"{plaintext_file_path} does not exist. No action needed.")

if __name__ == "__main__":
    main()
